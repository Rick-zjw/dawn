    body {
      background: #111;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    #viewer {
      background: #000;
      width: 500px;
      height: 500px;
      cursor: grab;
    }
  </style>
<canvas id="viewer" width="500" height="500"></canvas>

<script>
  const canvas = document.getElementById('viewer');
  const ctx = canvas.getContext('2d');

  const frameCount = 17;
  const images = [];
  let currentFrame = 0;
  let isDragging = false;
  let startX = 0;
  let autoSpinInterval;

  // 加载所有帧图像
  for (let i = 0; i <= frameCount; i++) {
    const img = new Image();
    const num = i.toString().padStart(2, '0');
    img.src = `https://cdn.shopify.com/s/files/1/0687/6128/8960/files/1_00${num}-min.png?v=1744719578`;
    images.push(img);
  }

  // 显示某一帧
  function drawFrame(index) {
    const img = images[index];
    if (img.complete) {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
    } else {
      img.onload = () => drawFrame(index);
    }
  }

  // 初始显示第一帧
  drawFrame(currentFrame);

  // 自动旋转
  function startAutoSpin() {
    autoSpinInterval = setInterval(() => {
      currentFrame = (currentFrame + 1) % frameCount;
      drawFrame(currentFrame);
    }, 200); // 每 100ms 转一帧（可以调快或调慢）
  }

  function stopAutoSpin() {
    clearInterval(autoSpinInterval);
  }

  // 鼠标事件
  canvas.addEventListener('mousedown', (e) => {
    isDragging = true;
    startX = e.clientX;
    stopAutoSpin();
  });

  canvas.addEventListener('mousemove', (e) => {
    if (!isDragging) return;
    const dx = e.clientX - startX;
    if (Math.abs(dx) > 5) {
      const step = dx > 0 ? -1 : 1;
      currentFrame = (currentFrame + step + frameCount) % frameCount;
      drawFrame(currentFrame);
      startX = e.clientX;
    }
  });

  canvas.addEventListener('mouseup', () => {
    isDragging = false;
    startAutoSpin();
  });

  // 触控事件
  canvas.addEventListener('touchstart', (e) => {
    isDragging = true;
    startX = e.touches[0].clientX;
    stopAutoSpin();
  });

  canvas.addEventListener('touchmove', (e) => {
    if (!isDragging) return;
    const dx = e.touches[0].clientX - startX;
    if (Math.abs(dx) > 5) {
      const step = dx > 0 ? -1 : 1;
      currentFrame = (currentFrame + step + frameCount) % frameCount;
      drawFrame(currentFrame);
      startX = e.touches[0].clientX;
    }
  });

  canvas.addEventListener('touchend', () => {
    isDragging = false;
    startAutoSpin();
  });

  // 延迟 1 秒后开始自动旋转
  setTimeout(() => {
    startAutoSpin();
  }, 1000);
</script>